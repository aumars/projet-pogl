@startuml
title L'ÃŽle Interdite - Diagramme de classe

interface Observable
Observable <-[dashed]- Controleur
interface Observer
Observer <-[dashed]- Vue

package Modele {
    abstract class Objet

    enum Inondation {
        SECHE
        INONDEE
        SUBMERGEE
    }

    enum Direction {
        HAUT
        BAS
        GAUCHE
        DROITE
    }

    enum Element {
        AIRE
        EAU
        TERRE
        FEU
    }

    enum Terrain {
        TERRE
        MER
    }

    class Personnage {
      -estVivant: boolean
      -positionX: int
      -positionY: int
      +meurt(): void
      +posX(): int
      +posY(): int
      ~deplace(Direction): void
    }

    class Joueur {
    }
    Objet "0..n" *-- "1" Joueur
    Personnage <-- Joueur

    class Modele {
      -largeur: int
      -hauteur: int
      +initialise(): void
      +tourSuivant(): void
      +verifieGagnant(): boolean
      +deplaceJoueur(): boolean
    }
    Observable <-[dashed]- Modele
    Modele "1" *-- "1" Grille
    Modele "1" *-- "1..n" Personnage
    Modele "1" *-- "1" Joueur
    Modele "1" -- "1" Vue
    Modele "1" -- "1" Controleur

    class Grille {
      +metAJour(): void
      +inondeAleatoirement(): void
    }
    Grille "1" *-- "n*n" Case

    class Case {
      -x: int
      -y: int
      -etat: Inondation
      -terrain: Terrain
      +inonde(): void
      +estTraversable(): boolean
    }
    Case "1" -- "1" Joueur
    Case "0..1" -- "0..1" Artefact

    class Artefact {
      -element: Element
    }
    Objet <-- Artefact

    class Clef
    Objet <-- Clef
}

package Controleur {
    class Controleur {
      +demarrer(): void
      +tourSuivant(): void
      +seDeplacer(): void
    }
}

package Vue {
    class Vue
    Vue "1" -- "1" Controleur

    class VueGrille{
      +afficheGrille(): void
    }
    Vue "1" *-- "1" VueGrille

    class VueCase{
      +afficheCase(): void
    }
    VueGrille "1" *-- "n*n" VueCase

    class VueCommande
    Vue "1" *- "1" VueCommande

    class VueBouton
    Vue "1" *-- "0..n" VueBouton
}
@enduml