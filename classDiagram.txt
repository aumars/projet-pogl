@startuml
title L'Île Interdite - Diagramme de classe

interface Observable
Observable <-[dashed]- Modele
Observable <-[dashed]- Controleur
interface Observer
Observer <-[dashed]- Vue

class IleInterdite {
    {static} + main(): void
}
IleInterdite "1" *-- "1" Modele
IleInterdite "1" *-- "1" Vue
IleInterdite "1" *-- "1" Controleur

Modele "1" -- "1" Vue
Modele "1" -- "1" Controleur

package Modele {
    enum Inondation {
        SECHE
        INONDEE
        SUBMERGEE
    }

    enum Direction {
        HAUT
        BAS
        GAUCHE
        DROITE
    }

    enum Element {
        AIRE
        EAU
        TERRE
        FEU
    }

    enum Terrain {
        TERRE
        MER
        HELIPAD
    }

    enum Difficulte {
        FACILE
        MOYEN
        DIFFICILE
        DETERMINISTE
    }

    abstract class Objet
    Objet <-- Artefact
    Objet <-- Clef

    class Coord

    class Case
    Case "0..1" o-- "1" Coord /' Case est associé à un Coord '/
    Case "0..1" -- "0..1" Objet /' Case est associé à un Objet '/

    class Grille
    Grille "1" *-- "Case"

    class Joueur
    Joueur "1" -- "0..n" Objet
    Case "0..1" -- "0..4" Joueur /' A modifier avec la liste de joueurs dans une case '/

    class Carte
    Carte "1" *-- "1" Grille

    class Jeu
    Jeu "1" *-- "0..n" Objet
    Jeu "1" *-- "0..n" Coord
    Jeu "1" *-- "0..4" Joueur

    class Modele
    Modele "1" *-- "1" Carte
    Modele "1" *-- "1" Jeu
    Modele "1" o-- "1..4" Joueur

    package Exception {
        class InvalidGameException
    }
}

package Controleur {
    class Controleur {
      +demarrer(): void
      +tourSuivant(): void
      +seDeplacer(): void
    }
}

package Vue {
    class Vue
    Vue "1" -- "1" Controleur

    class VueGrille{
      +afficheGrille(): void
    }
    Vue "1" *-- "1" VueGrille

    class VueCase{
      +afficheCase(): void
    }
    VueGrille "1" *-- "n*n" VueCase

    class VueCommande
    Vue "1" *- "1" VueCommande

    class VueBouton
    Vue "1" *-- "0..n" VueBouton
}
@enduml